/* src/client/sidebar/sidebar.css */

#editor-container {
  display: flex;
  width: 100%;
  height: 100%;
}

#canvas {
  overflow: hidden;
  flex: 1;
  height: 100%;
  transition: all 0.3s ease; /* Keep transition for potential canvas resize effects */
}

/* Ensure canvas focus outline is handled if needed, or remove if not specific to sidebar context */
#canvas svg:focus {
  outline: none;
}

#sidebar {
  width: 300px;
  height: 100%;
  background: #f5f5f5;
  border-left: 1px solid #ddd;
  transition: all 0.3s ease;
  position: relative;
  overflow: auto;
  transform-origin: top right; /* For expand/collapse animation */
}

#sidebar.collapsed {
  width: 40px;
}

/* Styles for the expanded state (popup-like) */
#sidebar.expanded {
  position: fixed;
  width: 60%; /* Or use calc as in the original: calc(100% - 200px) */
  height: 80%; /* Or use calc as in the original: calc(100% - 200px) */
  top: 10%;    /* Or use 100px */
  left: 20%;   /* Or use 100px */
  z-index: 1000;
  box-shadow: 0 0 20px rgba(0,0,0,0.2);
  /* The animation will handle the transform and opacity */
  animation: expand 0.3s forwards;
}

#sidebar-toggle {
  position: absolute;
  left: 10px;
  bottom: 10px;
  width: 24px;
  height: 24px;
  background: #f5f5f5;
  border: 1px solid #ddd;
  border-radius: 4px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16px;
}

#sidebar-expand {
  position: absolute;
  right: 10px;
  top: 10px;
  width: 24px;
  height: 24px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16px;
}

#sidebar-minimize {
  position: absolute;
  right: 10px;
  top: 10px;
  width: 24px;
  height: 24px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16px;
  display: none; /* Initially hidden */
}

#sidebar.expanded #sidebar-toggle {
  display: none;
}

#sidebar.expanded #sidebar-expand {
  display: none;
}

#sidebar.expanded #sidebar-minimize {
  display: flex;
}

/*
  The second #sidebar.expanded rule in the original CSS seemed to override parts of the first one,
  specifically for animation. I've merged the animation part into the primary #sidebar.expanded rule.
  The transform-origin was moved to the base #sidebar rule.
*/

@keyframes expand {
  from {
    transform: scale(0.5);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

/* 
  The original #sidebar:not(.expanded) rule with 'collapse' animation had 'opacity: 0' at the end,
  which would make the sidebar invisible after collapsing if it's not immediately hidden or width changed.
  The current .collapsed class (width: 40px) handles the collapsed state.
  The transition on width in #sidebar and #sidebar.collapsed should handle the visual change.
  If a specific collapse animation is still desired, it might need adjustment.
  For now, relying on the width transition. If a fade-out/scale-out is needed before width change,
  this might need to be revisited.
*/
/* 
#sidebar:not(.expanded) {
  animation: collapse 0.3s forwards;
  opacity: 1 !important;
  transform: scale(1) !important;
}

@keyframes collapse {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.5);
    opacity: 0;
  }
}
*/
